#include "MapData.h"

MapData::MapData()
{
    //存储地图数据
    QVector<QVector<int>> map;

    //第一关配置数据
    int arr1[15][15]=
    {
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
        {0,0,0,0,0,1,3,2,6,1,0,0,0,0,0},
        {0,0,0,0,0,1,3,4,2,1,0,0,0,0,0},
        {0,0,0,0,0,1,2,4,2,1,0,0,0,0,0},
        {0,0,0,0,0,1,2,4,3,1,0,0,0,0,0},
        {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
    };
    int step1=33;
    int bestStep1=23;
    for(int i=0; i<15; i++)
    {
        QVector<int> vec;
        for(int j=0; j<15; j++)
        {
            vec.push_back(arr1[i][j]);
        }
        map.push_back(vec);
    }

    mData.insert(1,map);
    stepData.insert(1,step1);
    bestStepData.insert(1,bestStep1);
    //第二关配置数据
    map.clear();//先清空
    int arr2[15][15]=
    {
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,1,1,1,1,1,0,0,0,0,0,0,0},
        {0,0,0,1,6,2,2,1,0,0,0,0,0,0,0},
        {0,0,0,1,2,4,4,1,0,0,0,0,0,0,0},
        {0,0,0,1,2,4,2,1,0,1,1,1,0,0,0},
        {0,0,0,1,1,1,2,1,1,1,3,1,0,0,0},
        {0,0,0,0,0,1,2,1,1,1,3,1,0,0,0},
        {0,0,0,0,1,1,2,2,2,2,3,1,0,0,0},
        {0,0,0,0,1,2,2,2,1,2,2,1,0,0,0},
        {0,0,0,0,1,2,2,2,1,1,1,1,0,0,0},
        {0,0,0,0,1,1,1,1,1,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
    };
    int step2=108;
    int bestStep2=98;
    for(int i=0; i<15; i++)
    {
        QVector<int> vec;
        for(int j=0; j<15; j++)
        {
            vec.push_back(arr2[i][j]);
        }
        map.push_back(vec);
    }
    mData.insert(2,map);  
    stepData.insert(2,step2);
    bestStepData.insert(2,bestStep2);

    //第三关配置数据
    map.clear();//先清空
    int arr3[15][15]=
    {
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,1,1,1,1,1,0,0,0,0,0,0},
        {0,0,0,0,1,2,2,2,1,1,0,0,0,0,0},
        {0,0,0,0,1,2,2,4,6,1,0,0,0,0,0},
        {0,0,0,0,1,1,4,2,3,1,0,0,0,0,0},
        {0,0,0,0,0,1,2,2,3,1,0,0,0,0,0},
        {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
    };
    int step3=39;
    int bestStep3=29;
    for(int i=0; i<15; i++)
    {
        QVector<int> vec;
        for(int j=0; j<15; j++)
        {
            vec.push_back(arr3[i][j]);
        }
        map.push_back(vec);
    }
    mData.insert(3,map);
    stepData.insert(3,step3);
    bestStepData.insert(3,bestStep3);

    //第四关配置数据
    map.clear();//先清空
    int arr4[15][15]=
    {
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
        {0,0,0,0,1,2,3,2,2,1,0,0,0,0,0},
        {0,0,0,0,1,2,4,4,6,1,0,0,0,0,0},
        {0,0,0,0,1,5,4,3,2,1,0,0,0,0,0},
        {0,0,0,0,1,2,2,3,2,1,0,0,0,0,0},
        {0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
    };
    int step4=67;
    int bestStep4=57;
    for(int i=0; i<15; i++)
    {
        QVector<int> vec;
        for(int j=0; j<15; j++)
        {
            vec.push_back(arr4[i][j]);
        }
        map.push_back(vec);
    }
    mData.insert(4,map);
    stepData.insert(4,step4);
    bestStepData.insert(4,bestStep4);
}
